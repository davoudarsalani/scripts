#!/usr/bin/env bash

## last modified: 1400-09-08 20:34:24 +0330 Monday

source "$HOME"/scripts/gb
source "$HOME"/scripts/gb-audio
source "$HOME"/scripts/gb-calculation

title="${0##*/}"

function display_help {
    source "$HOME"/scripts/.help
    typer_help
}

function countdown {
    for ((i=10; i>0; i--)); {
        printf '%s\e[0K\r' "$(blue "$i")"
        sleep 1
    }
}

function sleep_now {
    if [ "$slp" == 'random' ]; then
        sleep "${intervals["$(( "$RANDOM" % "$intervals_length" ))"]}"
    else
        sleep "$slp"
    fi
}

function play_random_key_sound {
    pacmd play-file "$key_sound" "${key_sounds["$(( "$RANDOM" % "$key_sounds_length" ))"]}" "$def_sink_index"
}

function type_in_vim {
    chars_count="$(wc -c < "$file")"
    # (( chars_count+=100 ))  ## add 100 just in case

    countdown

    ## strike keys
    for ((i=1; i<="$chars_count"; i++)); {
        (( perc="i * 100 / chars_count" ))
        (( remaining_chars="chars_count - i" ))
        eta_mid="$(float_pad "${remaining_chars}*${intervals_middle_member}")"
        eta_mid_conv="$(day_hour_min_sec "$eta_mid")"

        printf '%s %s %s\e[0K\r' "$(green "${i}/${chars_count}")" "$(yellow "${perc}%")" "$(brown "eta: ${eta_mid_conv}")"

        xdotool key c
        play_random_key_sound && sleep_now
    }
    printf '\n'

    accomplished 'Done. Press Ctrl+C in vim to exit'
}

function type_in_terminal {  ## by Metalx1000 (https://pastebin.com/Uqf6DPmZ)
    clear
    while read line; do  ## read file one line at a time
        lines_count="${#line}"
        for ((i=0; i<"$lines_count"; i++)); {  ## read line one character at a time
            printf '%s' "${line:$i:1}"  ## NOTE no \n
            play_random_key_sound && sleep_now
        }
        printf '\n'
    done < "$file"
}

function prompt {
    for args in "$@"; {
        case "$1" in
            -f ) [ ! "$file" ] && get_input 'File'                             && file="$input" ;;
            -s ) [ ! "$slp"  ] && get_input 'Sleep (e.g. 0.2, 1, random, etc)' && slp="$input" ;;
        esac
        shift
    }
}

function get_opt {
    local options="$(getopt --longoptions 'help,file:,sleep:' --options 'hf:s:' --alternative -- "$@")"
    eval set -- "$options"
    while true; do
        case "$1" in
            -h|--help )  display_help     ;;
            -f|--file )  shift; file="$1" ;;
            -s|--sleep ) shift; slp="$1"  ;;
            -- )         break            ;;
        esac
        shift
    done
}

get_opt "$@"

IFS=   ## prevent leading spaces from being ignored (https://stackoverflow.com/questions/29689172/bash-read-ignores-leading-spaces)
intervals=(
    0.05
    0.06
    0.07
    0.08
    0.09
    0.1
    0.2
    0.3
)
intervals_length="${#intervals[@]}"
intervals_middle_member="${intervals["$(( "$intervals_length" / 2 ))"]}"

key_sounds=(
    "$HOME"/linux/sounds/key_press_1.wav
    "$HOME"/linux/sounds/key_press_1_dance.wav
    "$HOME"/linux/sounds/key_press_2.wav
    "$HOME"/linux/sounds/key_press_2_fullbase.wav
)
key_sounds_length="${#key_sounds[@]}"

heading "$title"

main_item="$(pipe_to_fzf 'in vim' 'in terminal' 'help')" && wrap_fzf_choice "$main_item" || exit 37

case "$main_item" in
    'in vim' ) prompt -f -s
               type_in_vim ;;
    'in terminal' ) prompt -f -s
                    type_in_terminal ;;
    help ) display_help ;;
esac

exit

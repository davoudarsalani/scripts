#!/usr/bin/env bash

## last modified: 1400-09-14 16:35:36 +0330 Sunday

source "$HOME"/scripts/gb

title="${0##*/}"

function display_help {
    source "$HOME"/scripts/.help
    sony_help
}

function upload {
    scp -r "$@" "${USER}"@sony-"$bed":"$HOME"/downloads && accomplished
}

function download {
    local all

    all="${@:0}"  ## turn array into str because shelccheck said: SC2145 (error): Argument mixes string and array. Use * or separate argument.
    scp -r "${USER}"@sony-"$bed":"$all" "$HOME"/downloads && accomplished
}

function connect {
    ssh -Y "${USER}"@sony-"$bed" && accomplished
}

function connect_plus_x2x {
    ssh -Y "${USER}"@sony-"$bed" 'x2x -west -to :0'
}

function prompt {
    for _ in "$@"; {
        case "$1" in
            -n ) [ ! "$name" ] && name="$(get_input 'Dir/file name')" ;;
        esac
        shift
    }
}

function get_opt {
    local options

    options="$(getopt --longoptions 'help,name:' --options 'hn:' --alternative -- "$@")"
    eval set -- "$options"
    while true; do
        case "$1" in
            -h|--help ) display_help     ;;
            -n|--name ) shift; name="$1" ;;
            -- )        break            ;;
        esac
        shift
    done
}

get_opt "$@"
heading "$title"

main_items=( 'ethernet connect + x2x' 'ethernet connect' 'ethernet download' 'ethernet upload' 'wifi connect + x2x' 'wifi connect' 'wifi download' 'wifi upload' 'help' )
main_item="$(pipe_to_fzf "${main_items[@]}")" && wrap_fzf_choice "$main_item" || exit 37

case "$main_item" in
    'ethernet connect + x2x' ) bed='ethernet'
                               connect_plus_x2x ;;
    'ethernet connect' ) bed='ethernet'
                         connect ;;
    'ethernet download' ) prompt -n
                          bed='ethernet'
                          download "$name" ;;
    'ethernet upload' ) prompt -n
                        bed='ethernet'
                        upload "$name" ;;

    'wifi connect + x2x' ) bed='wifi'
                           connect_plus_x2x ;;
    'wifi connect' ) bed='wifi'
                     connect ;;
    'wifi download' ) prompt -n
                      bed='wifi'
                      download "$name" ;;
    'wifi upload' ) prompt -n
                    bed='wifi'
                    upload "$name" ;;
    help ) display_help ;;
esac

exit

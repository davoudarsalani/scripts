#!/usr/bin/env bash

## By Davoud Arsalani
##    https://github.com/davoudarsalani/scripts
##    https://github.com/davoudarsalani/scripts/blob/master/awesome-widgets-network
##    https://raw.githubusercontent.com/davoudarsalani/scripts/master/awesome-widgets-network
##    https://davoudarsalani.ir

source "$HOME"/main/scripts/gb
source "$HOME"/main/scripts/gb-calculation
source "$HOME"/main/scripts/gb-network

down_up_text=''

case "$1" in
    usage )
        ## {{{ connections
        [ "$vpn_info" ] && vpn_conn="[${vpn_conn}] "
        [ "$wf_conn" == 'MCI' ] && if_simcard=' SIM'
        [ "$wf_state" == 'connected' ] || if_wf_down=' DOWN'

        ## set wf_conn_color based on wf_strength
        wf_strength="$(tail -n 1 /proc/net/wireless | awk '{print $4}' | tr -d '.')"
        if   (( wf_strength < -75 )); then wf_conn_color="$orange"
        elif (( wf_strength < -50 )); then wf_conn_color="$yellow"
        elif (( wf_strength < -25 )); then wf_conn_color="$fg_d"
        elif (( wf_strength <   0 )); then wf_conn_color="$fg_d"
        else                               wf_conn_color="$purple"
        fi

        connections_text="<span color=\"${fg_d}\">${vpn_conn}${eth_conn}</span> <span color=\"${wf_conn_color}\">${wf_conn}</span><span color=\"${orange}\">${if_simcard}${if_wf_down}</span>"
        # connections_text="<span color=\"${fg_d}\">${vpn_conn}${eth_conn} ${wf_conn}</span>"
        ## }}}
        ## down/up {{{ https://www.adminsehow.com/2010/03/shell-script-to-show-network-speed/
        for interface in 'ethernet' 'wifi'; {

            case "$interface" in
                ethernet )
                    cur_interface="$eth_devc"
                    if_connected="$eth_state"
                    pref='eth'
                    ;;
                wifi )
                    cur_interface="$wf_devc"
                    if_connected="$wf_state"
                    pref='wf'
                    ;;
            esac

            [ "$if_connected" == 'connected' ] || continue

            down_last_file="$HOME"/main/scripts/.last/network_"${pref}"_down
            up_last_file="$HOME"/main/scripts/.last/network_"${pref}"_up

            ## get last down/up
            down_last="$(< "$down_last_file")" || down_last=0  ## 19410508  ## NOTE do NOT add 2>/dev/null
            up_last="$(< "$up_last_file")" || up_last=0        ## 19410508  ## NOTE do NOT add 2>/dev/null

            ## get new down/up
            down_up="$(\grep "$cur_interface" /proc/net/dev | awk '{print "down="$2, "up="$10}')"  ## <-- NOTE do NOT replace " with ' in awk
            eval "$down_up"  ## 19410509 789384

            ## save new down/up as last (in bytes, before converting them) for our next read
            printf '%s\n' "$down" > "$down_last_file"
            printf '%s\n' "$up"   > "$up_last_file"

            ## get+convert total down/up before converting down/up
            down_total="$(convert_byte "$down")"  ## 4.32G
            up_total="$(convert_byte "$up")"      ## 4.32G

            ## set total down/up color
            usage_low="$grey_dark"
            usage_medium="$grey"
            usage_high="$pink"
            usage_ultrahigh="$red"

            if   (( down < "$K"     )); then down_total_color="$usage_low"        ## is B
            elif (( down < "$M"     )); then down_total_color="$usage_low"        ## is K
            elif (( down < "$M_400" )); then down_total_color="$usage_low"        ## is below 400M
            elif (( down < "$M_700" )); then down_total_color="$usage_medium"     ## is below 700M
            elif (( down < "$G"     )); then down_total_color="$usage_high"       ## is below 1G
            else                             down_total_color="$usage_ultrahigh"  ## is 1G or higher
            fi

            if   (( up < "$K"     )); then up_total_color="$usage_low"        ## is B
            elif (( up < "$M"     )); then up_total_color="$usage_low"        ## is K
            elif (( up < "$M_400" )); then up_total_color="$usage_low"        ## is below 400M
            elif (( up < "$M_700" )); then up_total_color="$usage_medium"     ## is below 700M
            elif (( up < "$G"     )); then up_total_color="$usage_high"       ## is below 1G
            else                           up_total_color="$usage_ultrahigh"  ## is 1G or higher
            fi

            ## calculate diff and convert bytes
            (( down_diff="down - down_last" ))  ## 1341440
            (( up_diff="up - up_last" ))        ## 1341440
            down_diff_conv="$(convert_byte "$down_diff")"  ## 1.31M
            up_diff_conv="$(convert_byte "$up_diff")"      ## 1.31M

            ## set down/up color
            speed_low="$fg_l"
            speed_medium="$green_darker"
            speed_high="$green_dark"
            speed_ultrahigh="$green"

            if   (( down_diff < "$K"     )); then down_color="$speed_low"        ## is B
            elif (( down_diff < "$K_400" )); then down_color="$speed_low"        ## is below 400K
            elif (( down_diff < "$K_700" )); then down_color="$speed_medium"     ## is below 700K
            elif (( down_diff < "$M"     )); then down_color="$speed_high"       ## is below 1M
            else                                  down_color="$speed_ultrahigh"  ## is M or G
            fi

            if   (( up_diff < "$K"     )); then up_color="$speed_low"        ## is B
            elif (( up_diff < "$K_400" )); then up_color="$speed_low"        ## is below 400K
            elif (( up_diff < "$K_700" )); then up_color="$speed_medium"     ## is below 700K
            elif (( up_diff < "$M"     )); then up_color="$speed_high"       ## is below 1M
            else                                up_color="$speed_ultrahigh"  ## is M or G
            fi

            down_up_text+=" <span color=\"${down_color}\">${down_diff_conv}</span> <span color=\"${up_color}\">${up_diff_conv}</span> \
<span color=\"${down_total_color}\">${down_total}</span> <span color=\"${up_total_color}\">${up_total}</span>"   ## 317K 2.31M 4.32G 4.32G

        }
        ## }}}
        set_widget 'network' 'markup' "${connections_text} ${down_up_text# }"  ## remove leading space
        ;;
    turn_on_wifi )
        nmcli radio wifi on ;;
    turn_off_wifi )
        nmcli radio wifi off ;;
esac

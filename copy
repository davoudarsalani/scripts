#!/usr/bin/env bash

## @last-modified 1401-05-07 16:26:53 +0330 Friday

source "$HOME"/scripts/gb
source "$HOME"/scripts/gb-color

title="${0##*/}"

function copy {
    local remove_propmt

    action_now 'removing'

    [ -d "$dest_dir" ] || {
        red "no such dir as $dest_dir"
        exit
    }

    readarray -t files < <(find "$dest_dir" -mindepth 1 -maxdepth 1 ! -iname '*0-path.txt' | sort)
    printf '%s\n' "${files[@]##*/}" | column

    remove_propmt="$(get_single_input 'Remove these?')" && printf '\n'
    case "$remove_propmt" in
        y )
            rm -rf "${files[@]}" ;;
        * )
            exit ;;
    esac

    action_now 'copying'
    cp -r "$@" "$dest_dir" && \
    accomplished
}

heading "$title"

main_items=( 'vim' 'awesome' 'bash' 'tmux' 'fzf' 'lf' 'ranger' 'xfce4-terminal' 'cava' 'rofi' 'greenclip' 'grub' 'uget' 'kdenlive' 'mutt' 'lightdm' 'highlight' 'picom' 'kid3' 'audacious' 'vlc' 'irssi' 'git' 'tor' 'kdeconnect' 'torsocks' 'handbrake' 'vsftpd' 'ssh' 'aria2' 'mpv' 'vifm' 'gpicview' 'htop' 'qutebrowser' 'optimus-manager' 'wget' 'netrc' 'pacman.conf' 'gtk-2.0' 'gtk-3.0' 'fstab' 'mkinitcpio' '99-sysctl' 'dhcpcd' 'xorg.conf' 'xinitrc' 'mirrorlist'   'firefox' '/var/cache/pacman/pkg' )
main_item="$(pipe_to_fzf "${main_items[@]}")" && wrap_fzf_choice "$main_item" || exit 37
dest_dir="$HOME"/linux/cfg-"$main_item"

case "$main_item" in
    vim )
        copy "$HOME"/{.vim,.vimrc} ;;
    awesome )
        copy "$HOME"/.config/awesome/* ;;
    bash )
        copy "$HOME"/.bashrc \
             "$HOME"/.bash_history \
             /etc/{bash.bashrc,environment,inputrc,profile} ;;
    tmux )
        copy "$HOME"/.tmux* ;;
    fzf )
        copy "$HOME"/.fzf/ ;;
    lf )
        copy "$HOME"/.config/lf/lfrc \
             "$HOME"/.local/share/lf/{marks,history} ;;
    ranger )
        ## first, check if the version of os python and ranger python are different
        ranger_python="$(ranger --version | \grep -i 'python version' | awk '{print $3}')"
        os_python="$(python --version | awk '{print $NF}')"
        [ "$os_python" == "$ranger_python" ] || {
            red "different python versions. ranger python: ${ranger_python}, os python: ${os_python})"
            exit
        }

        ## now check if python version has changed from 3.9.*
        regex='3.9.*'
        [[ "$os_python" =~ $regex ]] || {
            red "python version changed ($os_python)"
            exit
        }

        copy "$HOME"/.config/ranger/{colorschemes,plugins,commands.py,commands_full.py,rc.conf,rifle.conf,scope.sh} \
             /usr/lib/python3.9/site-packages/ranger/container/fsobject.py ;;
    xfce4-terminal )
        copy "$HOME"/.config/xfce4/* ;;
    cava )
        copy "$HOME"/.config/cava/config ;;
    rofi )
        copy "$HOME"/.config/rofi/* ;;
    greenclip )
        copy "$HOME"/.config/greenclip.toml ;;
    grub )
        copy /etc/default/grub ;;
    uget )
        copy "$HOME"/.config/uGet/Setting.json ;;
    kdenlive )
        copy "$HOME"/.config/kdenliverc ;;
    mutt )
        copy "$HOME"/.muttrc ;;
    lightdm )
        copy /etc/lightdm/* ;;
    highlight )
        copy "$HOME"/.config/highlight/anotherdark.theme \
             /usr/share/highlight/* ;;
    picom )
        copy "$HOME"/.config/picom/picom.conf ;;
    kid3 )
        copy "$HOME"/.config/kid3rc ;;
    audacious )
        copy "$HOME"/.config/audacious/* ;;
    vlc )
        copy "$HOME"/.config/vlc/* ;;
    irssi )
        copy "$HOME"/.irssi/* ;;
    git )
        copy "$HOME"/{.gitconfig,.git-credentials} ;;
    tor )
        copy /etc/tor/torrc ;;
    kdeconnect )
        copy "$HOME"/.config/kdeconnect/* ;;
    torsocks )
        copy /etc/tor/torsocks.conf ;;
    handbrake )
        copy "$HOME"/.config/ghb/preferences.json ;;
    vsftpd )
        copy /etc/vsftpd.conf ;;
    ssh )
        copy /etc/ssh/{ssh_config,sshd_config} \
             "$HOME"/.ssh/config ;;
    aria2 )
        copy "$HOME"/.aria2/aria2.conf ;;
    mpv )
        copy "$HOME"/.config/mpv/* ;;
    vifm )
        copy "$HOME"/.config/vifm/* ;;
    gpicview )
        copy "$HOME"/.config/gpicview/gpicview.conf ;;
    htop )
        copy "$HOME"/.config/htop/htoprc ;;
    qutebrowser )
        copy "$HOME"/.config/qutebrowser/config.py ;;
    optimus-manager )
        copy /etc/optimus-manager/optimus-manager.conf \
             /etc/X11/xorg.conf.d/10-optimus-manager.conf ;;
    wget )
        copy /etc/wgetrc ;;
    ## os pkgs ----------------------------------------------------------------
    netrc )
        copy "$HOME"/.netrc ;;
    pacman.conf )
        copy /etc/pacman.conf ;;
    gtk-2.0 )
        [ -f "$HOME"/.gtkrc-2.0 ] || {
            red "${HOME}/.gtkrc-2.0 does not exist"
            exit
        }

        copy "$HOME"/.gtkrc-2.0 \
             "$HOME"/.config/gtk-2.0/gtkfilechooser.ini ;;
    gtk-3.0 )
        copy "$HOME"/.config/gtk-3.0/* ;;
    fstab )
        copy /etc/fstab ;;
    mkinitcpio )
        copy /etc/mkinitcpio.conf ;;
    99-sysctl )
        copy /etc/sysctl.d/99-sysctl.conf ;;
    dhcpcd )
        copy /etc/dhcpcd.conf ;;
    xorg.conf )
        copy /etc/X11/xorg.conf ;;
    xinitrc )
        copy "$HOME"/.xinitrc ;;
    mirrorlist )
        copy /etc/pacman.d/mirrorlist ;;



    ## pkgs with exceptional removing/copying procedures -------------------------------

    ## removes chrome dir only
    firefox )
        action_now 'removing chrome dir only'
        rm -r "$dest_dir"/chrome
        action_now 'copying chrome dir only'
        cp -r "$HOME"/.mozilla/firefox/*.default-release/chrome "$dest_dir" && accomplished ;;

    ## has a different dest_dir
    /var/cache/pacman/pkg )
        dest_dir="$HOME"/linux-pkg
        readarray -t pkgs < <(find /var/cache/pacman/pkg/ -mindepth 1 -maxdepth 1 -type f)
        if [ "$pkgs" ]; then
            action_now 'copying from /var/cache/pacman/pkg'
            cp -r "${pkgs[@]}" "$dest_dir"
            action_now 'removing pkgs in /var/cache/pacman/pkg'
            sudo rm "${pkgs[@]}"
            action_now 'checking if there are older pkgs to move to trash'
            move_older_pkgs
        else
            red 'nothing to copy'
        fi && accomplished ;;

esac

#!/usr/bin/env bash

## @last-modified 1400-10-20 13:52:20 +0330 Monday

## NOTE this script is used:
##      a. for building docker image
##      b. in action-jdate

function dl_xtract {
    mkdir -p "$temp_dir"/sources
    wget --tries=inf -O "$tar_file" "$1"  ## 0 or inf for infinite retrying because downloading is sometimes not easy when building images
    tar -xf "$tar_file" -C "$temp_dir"/sources
    rm "$tar_file"
}

## needed because user is root when creating docker image, and non-root in GitHub Actions
(( EUID == 0 )) && is_root='true'

temp_dir="$(mktemp -d)"  ## NOTE do NOT replace -d with --directory because it wil throw error when run on Alpine
tar_file="$temp_dir"/jcal_latest.tar.gz

## INSTALLING-DEPENDENCIES::START
printf 'installing dependencies\n'
for dep in automake build-essential libjalali-dev libtool; {
    [ "$(command -v "$dep")" ] && continue

    if [ "$(command -v apk)" ]; then
        cmd="apk add --no-cache $dep"
    elif [ "$(command -v apt)" ]; then
        cmd="apt install -y --no-install-recommends $dep"
    fi

    [ "$is_root" == 'true' ] || cmd="sudo $cmd"
    eval "$cmd" || printf 'ERROR installing %s\n' "$dep"
}
## INSTALLING-DEPENDENCIES::END

printf 'cloning/downloading\n'
case "$1" in
  'clone-github' ) git clone https://github.com/ashkang/jcal.git "$temp_dir" ;;
  'clone-gnu'    ) git clone https://git.savannah.gnu.org/git/jcal.git "$temp_dir" ;;
  'clone-nongnu' ) git clone https://git.savannah.nongnu.org/git/jcal.git "$temp_dir" ;;
  'askapache'    ) dl_xtract 'http://nongnu.askapache.com/jcal/jcal-latest.tar.gz' ;;
  'gnu'          ) dl_xtract 'http://download-mirror.savannah.gnu.org/releases/jcal/jcal-latest.tar.gz' ;;
  'nongnu'       ) dl_xtract 'http://download.savannah.nongnu.org/releases/jcal/jcal-latest.tar.gz' ;;
  * ) printf 'invalid source\n'
      exit 1 ;;
esac

printf 'installing\n'
cd "$temp_dir"/sources || exit 1  ## have to cd because absolute paths won't work
./autogen.sh
./configure
make
if [ "$is_root" == 'true' ]; then
    make install
    /sbin/ldconfig
else
    sudo make install
    sudo /sbin/ldconfig
fi

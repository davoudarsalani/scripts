#!/usr/bin/env bash

case "$1" in
    if_sony ) [ "$HOSTNAME" == 'sony' ] && printf '%s\n' 'SONY ' ;;
    if_ssh ) [ "$SSH_CONNECTION" ] && printf '%s\n' 'SSH ' ;;
    pwd ) printf '%s\n' "${PWD//$HOME/\~}" ;;  ## keep \~ escaped
    info ) source "$HOME"/scripts/gb-calculation

           size="$(du -bs | awk '{print $1}')"
           size="$(convert_byte "$size")"

           directories_count="$(wc -l < <(find . -mindepth 1 -maxdepth 1 -type d))"
           files_count="$(wc -l < <(find . -mindepth 1 -maxdepth 1 -type f))"

           printf '%s %s %s\n' "$size" "$directories_count" "$files_count" ;;
    git ) [ ! -d .git ] && printf '%s\n' '--' && exit

          commits="$(git rev-list HEAD --count)"

          modified_count="$(      wc -l < <(git status -s | \grep '^ M'))"
          deleted_count="$(       wc -l < <(git status -s | \grep '^ D'))"
          idunno_A_count="$(      wc -l < <(git status -s | \grep '^ A'))"
          idunno_R_count="$(      wc -l < <(git status -s | \grep '^ R'))"
          staged_count="$(        wc -l < <(git status -s | \grep '^[MDAR] '))"
          staged_screwed_count="$(wc -l < <(git status -s | \grep '^[MDAR][MDAR]'))"
          untracked_count="$(     wc -l < <(git status -s | \grep '??'))"

          commits_ahead="$(git branch -v | \grep 'ahead' | \grep -ioP '(?<=\[).*?(?=\])' | awk '{print $2}')"
          ## previously: commits_ahead="$(git status -s | sed '1q;d' | \grep -i 'ahead' | awk '{print $NF}' | sed 's/[^0-9]//g')"

          [ "$modified_count"       -eq 0 ] && modified_count=''       || modified_count="  $modified_count"
          [ "$deleted_count "       -eq 0 ] && deleted_count=''        || deleted_count="  $deleted_count"
          [ "$idunno_A_count"       -eq 0 ] && idunno_A_count=''       || idunno_A_count="  $idunno_A_count"
          [ "$idunno_R_count"       -eq 0 ] && idunno_R_count=''       || idunno_R_count="  $idunno_R_count"
          [ "$staged_count"         -eq 0 ] && staged_count=''         || staged_count="  $staged_count"
          [ "$staged_screwed_count" -eq 0 ] && staged_screwed_count='' || staged_screwed_count="  $staged_screwed_count"
          [ "$untracked_count"      -eq 0 ] && untracked_count=''      || untracked_count="  $untracked_count"
          [ ! "$commits_ahead"            ] && commits_ahead=''        || commits_ahead="  $commits_ahead"

          [ "$(git remote -v | \grep -i 'github')" ] && logo='  ' || logo=''
          [ "$(git remote -v)" ] && if_no_remote='' || if_no_remote=' (no-remote)'

          branches_count="$(wc -l < <(git branch --list))"
          [ "$branches_count" -gt 1 ] && branches_count=" #BR=${branches_count}" || branches_count=''

          cur_branch="$(git branch -a 2>/dev/null | sed '/^[^*]/d;s/* \(.*\)/\1/')"
          [ "$cur_branch" == 'master' ] && cur_branch='' || cur_branch=" BR=${cur_branch}"

          printf '%s%s%s%s%s%s%s%s%s%s%s%s%s\n' "\
${commits}\
${modified_count}\
${deleted_count}\
${idunno_A_count}\
${idunno_R_count}\
${staged_count}\
${staged_screwed_count}\
${untracked_count}\
${commits_ahead}\
${logo}\
${if_no_remote}\
${branches_count}\
${cur_branch}" ;;
esac

exit

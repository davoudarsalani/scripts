#!/usr/bin/env bash

## last modified: 1400-09-07 10:37:10 +0330 Sunday

case "$1" in
    if_sony ) [ "$HOSTNAME" == 'sony' ] && printf 'SONY \n' ;;
    if_ssh ) [ "$SSH_CONNECTION" ] && printf 'SSH \n' ;;
    pwd ) printf '%s\n' "${PWD//$HOME/\~}" ;;  ## keep \~ escaped
    info ) source "$HOME"/scripts/gb-calculation

           size="$(du -bs | awk '{print $1}')"
           size="$(convert_byte "$size")"

           directories_count="$(wc -l < <(find -mindepth 1 -maxdepth 1 -type d))"
           files_count="$(wc -l < <(find -mindepth 1 -maxdepth 1 -type f))"
           links_count="$(wc -l < <(find -mindepth 1 -maxdepth 1 -type l))"
           (( links_count == 0 )) && links_count='' || links_count=" L:${links_count}"

           printf '%s %s %s%s\n' "$size" "$directories_count" "$files_count" "$links_count" ;;
    git ) source "$HOME"/scripts/gb-git

          [ "$(if_git)" == 'false' ] && printf '..\n' && exit

          commits_count="$(get_commits_count)"

          stts="$(get_status)"
          mod_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '^ M'))"
          del_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '^ D'))"
          ren_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '^ R'))"
          add_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '^ A'))"
          unt_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '??'))"
          sta_count="$(wc -l   < <(printf '%s\n' "$stts" | \grep '^[MDAR] '))"
          sta_m_count="$(wc -l < <(printf '%s\n' "$stts" | \grep '^[MDAR][MDAR]'))"

          (( mod_count   == 0 )) || mod="  $mod_count"
          (( del_count   == 0 )) || del="  $del_count"
          (( ren_count   == 0 )) || ren=" Ⓡ $ren_count"
          (( add_count   == 0 )) || add="  $add_count"
          (( unt_count   == 0 )) || unt="  $unt_count"
          (( sta_count   == 0 )) || sta="  $sta_count"
          (( sta_m_count == 0 )) || sta_m="  $sta_m_count"

          commits_ahead="$(get_commits_ahead)"
          (( commits_ahead > 0 )) && commits_ahead=" Ⓐ $commits_ahead" || commits_ahead=''  ## 

          if_rmt="$(if_remote)"
          [ "$(printf '%s\n' "$if_rmt" | \grep -i 'github')" ] && logo='  '
          [ "$if_rmt" ] || is_local=' LOCAL'

          branches_count="$(wc -l < <(get_branches_exclude_remote))"
          (( branches_count > 1 )) && branches_count=" #BR:${branches_count}" || branches_count=''

          current_branch="$(get_current_branch)"
          [ "$current_branch" == 'master' ] && current_branch='' || current_branch=" BR:${current_branch}"

          printf '%s%s%s%s%s%s%s%s%s%s%s%s%s\n' "\
${commits_count}\
${mod}\
${del}\
${ren}\
${add}\
${unt}\
${sta}\
${sta_m}\
${commits_ahead}\
${logo}\
${is_local}\
${branches_count}\
${current_branch}" ;;
esac

exit

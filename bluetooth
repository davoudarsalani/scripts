#!/usr/bin/env bash

## last modified: 1400-09-14 10:26:48 +0330 Sunday

source "$HOME"/scripts/gb
source "$HOME"/scripts/gb-fir-blu-batt

title="${0##*/}"

function update_bluetooth {
    "$HOME"/scripts/awesome-widgets bluetooth
}

heading "$title"

main_items=( 'status' 'blueman-manager' 'blueman-applet' 'turn on' 'turn off' 'controllers' 'controller information' 'select default controller' 'available/paired devices' 'device information' 'set pairable on/off' 'set discoverable on/off' 'pair with a device' 'trust/untrust a device' 'block/unblock a device' 'remove a device' 'connect/disconnect a device' 'configuration path' 'quit program' 'disable auto turning on' 'enable' 'disable' )
main_item="$(pipe_to_fzf "${main_items[@]}")" && wrap_fzf_choice "$main_item" || exit 37

case "$main_item" in
    status ) if [ "$bluetooth_status" == 'yes' ]; then
                 printf 'Bluetooth is off\n' && update_bluetooth && accomplished
             else
                 printf 'Bluetooth is on\n'  && update_bluetooth && accomplished
             fi ;;
    blueman-manager ) blueman-manager 1>/dev/null &
                      sleep 2
                      update_bluetooth && accomplished ;;
    blueman-applet ) blueman-applet 1>/dev/null 2>&1 &
                     sleep 2
                     update_bluetooth && accomplished ;;
    'turn on' ) sudo rfkill unblock bluetooth && update_bluetooth && accomplished ;;
    'turn off' ) sudo rfkill block bluetooth && update_bluetooth && accomplished ;;
    'available controllers' ) bluetoothctl list && accomplished ;;
    'controller information' ) bluetoothctl show "$def_ctrlr_mac" && accomplished ;;
    'select default controller' ) mac="$(get_input 'Mac address [!! or name]')"
                                  bluetoothctl select "$mac" && accomplished ;;
    'available/paired devices' ) printf 'available:\t%s\n' "$(bluetoothctl devices)"
                                 printf 'paired:\t\t%s\n' "$(bluetoothctl paired-devices)" && accomplished ;;
    'device information' ) mac="$(get_input 'Device mac address')"
                           bluetoothctl info "$mac" && accomplished ;;
    'set pairable on/off' ) set_pairable_item="$(pipe_to_fzf 'on' 'off')" && wrap_fzf_choice "$set_pairable_item" || exit 37

                            case "$set_pairable_item" in
                                on )  bluetoothctl pairable on  && accomplished ;;
                                off ) bluetoothctl pairable off && accomplished ;;
                            esac ;;
    'set discoverable on/off' ) set_discoverable_item="$(pipe_to_fzf 'on' 'off')" && wrap_fzf_choice "$set_discoverable_item" || exit 37

                                case "$set_discoverable_item" in
                                    on )  bluetoothctl discoverable on  && accomplished ;;
                                    off ) bluetoothctl discoverable off && accomplished ;;
                                esac ;;
    'pair with a device' ) mac="$(get_input 'Device mac address')"
                           bluetoothctl pair "$mac" && accomplished ;;
    'trust/untrust a device' ) trust_item="$(pipe_to_fzf 'trust' 'nuntrust')" && wrap_fzf_choice "$trust_item" || exit 37

                               case "$trust_item" in
                                   trust )   mac="$(get_input 'Device mac address')"
                                             bluetoothctl trust "$mac" && accomplished ;;
                                   untrust ) mac="$(get_input 'Device mac address')"
                                             bluetoothctl untrust "$mac" && accomplished ;;
                               esac ;;
    'block/unblock a device' ) block_item="$(pipe_to_fzf 'block' 'unblock')" && wrap_fzf_choice "$block_item" || exit 37

                               case "$block_item" in
                                   block )   mac="$(get_input 'Device mac address')"
                                             bluetoothctl block "$mac" && accomplished ;;
                                   unblock ) mac="$(get_input 'Device mac address')"
                                             bluetoothctl unblock "$mac" && accomplished ;;
                               esac ;;
    'remove a device' ) mac="$(get_input 'Device mac address')"
                        bluetoothctl remove "$mac" && accomplished ;;
    'connect/disconnect a device' ) connect_item="$(pipe_to_fzf 'connect' 'disconnect')" && wrap_fzf_choice "$connect_item" || exit 37

                                    case "$connect_item" in
                                        connect )    mac="$(get_input 'Device mac address')"
                                                     bluetoothctl connect "$mac" && accomplished ;;
                                        disconnect ) mac="$(get_input 'Device mac address')"
                                                     bluetoothctl connect "$mac" && accomplished ;;
                                    esac ;;
    'configuration path' ) printf '/etc/bluetooth/main.conf\n' && accomplished ;;
    'quit program' ) bluetoothctl quit && accomplished ;;
    'disable auto turning on' ) gsettings set org.blueman.plugins.powermanager auto-power-on false && accomplished ;;
    enable ) sudo systemctl enable bluetooth && accomplished ;;
    disable ) sudo systemctl disable bluetooth && accomplished ;;
esac

exit

## The default group the user must be a member of is lp. You can change it here: sudo "$editor" /etc/dbus-1/system.d/bluetooth.conf
## (https://wiki.archlinux.org/index.php/bluetooth)
